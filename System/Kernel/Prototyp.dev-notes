--------------------------------------------------------------------
Prototyp 1.6 (MCS language)

¢|  TransAktion Anfang/Vorgang/Start der Bedingung/eines bedingten Blocks
|¢  TransAktion Ende/Vorgang/Ende der Bedingung/eines bedingten Blocks

Nutzen = wird als Token/Credit transportiert , innerhalb .
--------------------------------------------------------------------
 »  Start einer Aktion/eines Zweiges/Proteins
 «  Ende einer Aktion/eines Zweiges/Proteins

Nutzen = Aufträge oder Erbenisse werden Verpackt weitergeleitet mit oder ohne weitere berechnungen
         an §Zielrefferenz

--------------------------------------------------------------------
 - · + : Zusätzliche Rechen weitergaben

 ««-      Minus
 ««+      Plus
 ««·      Mal
 ««:      Geteilt
 ««%      Prozentbezogene Rechnung, z. B. für Anteile
 ««%50   „Gib 50 % von X weiter“
 ««%-     kann kombiniert werden , geteilt durch minus usw

 Nutzen = kann am ende eines zweiges mitgegeben werden
          ««-/««+/««:/««·/««% für erweiterte schleifen logiken
          oder andere berechnungen

          Argumente die noch mit transportiert werden
          sollen für den weiteren Vorgang als weitere
          Rechnung oder merge wie teilungen.

          Wird typischerweise am Proteinpacket angehangen bs:
          ¢|»[{Watt|200}§MotorA]««%50 = §Unbekannt |¢
--------------------------------------------------------------------
 [   Start Proteinpacket
 ]   Ende Proteinpacket

Nutzen = Aufträge verpacken, Protein Packete Verschicken , HandlungsKommando
--------------------------------------------------------------------

 § Zielreferenz Innere Zielreferenz / Prozess-ID / Hardware-Slot / Gerätepfad (in RAM, Dev, CPU-Bereich)
 $ Dirigent     Externe Übergabe/Output zu Dirigent-Einheit (lokale API, Kernelpfad, Netzwerk, usw.)

 Nutzen = Dirigent übergibt Fertiges DatenAuftrag/Protein an
 Zielreferenz das wiederum gemerget,geforkt,gesplittet oder paralell
 im protein verarbeitet , ausgeführt werden soll/kann . Zielreferenzen
 wie auch dirigenten werden innerhalb eines Protein packetes für
 verbesserte Effizienz Transportiert , damit die ankunft der
 Ausgabe schneller postialisch einzuordnen ist .
      beispiel ¢|
                  »[{Watt|200}§MotorX]«
                  »[{Watt|200}|{Volt|12}§MotorX]«.
                |¢
--------------------------------------------------------------------

 ""     Print , zeigt alles darin als ausgabe an
 ''     Commando , Wird als Anweisung verstanden
 ¨¨     Blanker Nenner , Das ist , Richtig , abgleich
        Einfache eingaben ohne etwas

--------------------------------------------------------------------

 ~~ für Merge von mehreren Packets kann per () granuliert werden das
    genau
 >> für Fork oder Splitting Links Nach Rechts
 << für Fork oder Splitting Rechts Vor Links
 ¶  IF
 ¶¶ Else
 ¶= Paralelle oder nebenprozesse die mit eingaben rücksprachen zu tun
    haben , besonders hilfreich bei Gui designe
 ;; Für Paralell Transport , ohne eingabe aufforderung

 Nutzen = Kann Wahrheiten weitergeben mit mehrfach auswahl oder
 transporte ermöglichen wären einem gui fenster aufruf .
 Ermöglicht granulare paralell verarbeitungen wie hintergrund prozesse
--------------------------------------------------------------------

  |  Trennt Befehl von Argument oder Ausgabe oder Wörter , ersetzt "" ''
 ||| Mehrfach mitgabe , kein Merge , kann aber mit Merge erweitert werden ,
     auch (Nr) gebunden möglich

 Nutzen =  Könnte Ein befehl weitergeben oder mehrere
           Kann Duale Codes plus Wörter Plus Frequenz in eine [] Mitgeben wenn nötig (Wörter plus Anders)
--------------------------------------------------------------------

 (Zahl)  Zahl Zuweisung Für Verarbeitung vorgang , ähnlich eines Muster_Dirs , nur im Transport
         selbst

 Nutzen = Optional , kann einzelne mehrfach Labels/Aktionen Aufteilen
          Nützlich wen Protein weitergegeben für MicroSplittungen wie GPU - Sound Datenbänker usw
--------------------------------------------------------------------
 {}      Proton

 {Band|Frequenz}{Amp|Zahl}{Watt|Zahl}{V|Spannung}{Temp|Zahl}
 {Pfad|Adresse}{Ip|Adresse}{Interface|wlan0}{Transport|Packet}
 {Cash|Größe}{Signed|Größe}{Unsigned|Größe}{Tracer|Zahl}

 Nutzen = {} proton pakete können mit NR explizit
          weitergegeben werden Beispiel {(1)Band|Frequenz} Vs
          {Pfad|/etc/pacman.conf} , benennung -> {} Proton .
          ein Proton innerhalb eines Proteins kann daten aller
          Argument mit in die nächste verarbeitung oder
          endverarbeitung führen .
          Müsste nur ein vollständiges register haben um die namens
          gebung zu definieren welches proton was trägt , kann
          beliebig erweitert werden und auch berechnet .

--------------------------------------------------------------------
  *  Wenn/Kann
  °  WennNicht/Muss
  >  WennKleiner/Kann/Soll
  <  WennGrößer/Kann/Soll
  !  WennEindeutig/Sofort
  …  WennFehler/Kann/Sicherheit
  ^  TransaktionsFehler/Debugg
  ſ  DatenReste/Löschung
--------------------------------------------------------------------
  # bleibt traditionell kommentar
--------------------------------------------------------------------

ølanguage|Codeø     Warp

Ein Warp wird dafür verwendet um explizite language's aller art mit zutransportieren .
Der Warp wird innerhalb einer beendeten Transaktktion an dritter stelle weiter gegeben . 

Reihenfolge wenn das angesprochene System oder Browser die daten für eine reibungslose übersetzung benötigt ist : 3

1. Protein (das Proton mitliefern kann)
2. Proton (das eigenständig hardware ansprechen kann)
3. Warp (das für die übersetzung für Performenstechnische aspekte direkt in die jeweiligen compositor bzw Compiler eingespeißt wird)

--------------------------------------------------------------------


arbeitsnotiz : 

    ein Bash-Wrapper-Tool bauen:

        nimmt .c-Datei,

        compiliert mit gcc -S → .s (Assembly),

        parst die Assembly grob,

        ordnet C-Zeilen zu ASM-Blocks (so gut wie möglich),

        speichert Mapping in .c2asm.map-Datei

Optional später:

    Automatischer Schritt: ASM → MCS-Syntax als Rohübersetzung
