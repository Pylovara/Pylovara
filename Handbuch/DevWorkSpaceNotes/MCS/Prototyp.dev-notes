
Prototyp 0.8 (Eventuelles MCS/MCS+ language)

--------------------------------------------------------------------
¢|  TransAktion Anfang/Vorgang/Start der Bedingung/eines bedingten Blocks
|¢  TransAktion Ende/Vorgang/Ende der Bedingung/eines bedingten Blocks

Nutzen = wird als Token/Credit transportiert
--------------------------------------------------------------------
 »  Start einer Aktion/eines Zweiges/Proteins
 «  Ende einer Aktion/eines Zweiges/Proteins

Nutzen = Aufträge oder Erbenisse werden Verpackt weitergeleitet mit oder ohne weitere berechnungen
         an §Zielrefferenz
--------------------------------------------------------------------
 [   Start Proteinpacket
 ]   Ende Proteinpacket

Nutzen = Aufträge verpacken, Protein Packete Verschicken , HandlungsKommando
--------------------------------------------------------------------
 § Zielreferenz Innere Zielreferenz / Prozess-ID / Hardware-Slot / Gerätepfad (in RAM, Dev, CPU-Bereich)
 $ Dirigent     Externe Übergabe/Output zu Dirigent-Einheit (lokale API, Kernelpfad, Netzwerk, usw.)

 Nutzen = Dirigent übergibt Fertiges DatenAuftrag/Protein an Zielreferenz das wiederum
          gemerget,geforkt,gesplittet oder paralell im protein verarbeitet , ausgeführt werden soll
--------------------------------------------------------------------
 ""     Print , zeigt alles darin als ausgabe an
 ''     Commando , Wird als Anweisung verstanden
 ¨¨     Blanker Nenner , Das ist , Richtig , abgleich
        Einfache eingaben ohne etwas
--------------------------------------------------------------------
 =   Packet zu etwas ¢|das|¢ = $Dirigent

 Nutzen = Bringt ganze berechnete oder Zuweisungsdatensätze zum Empfänger
--------------------------------------------------------------------
 - · + : Zusätzliche Rechen weitergaben

 Nutzen = kann am ende eines zweiges mitgegeben werden «-/«+/«:/«· für erweiterte schleifen logiken oder andere
          Argumente die noch mit transportiert werden sollen für den weiteren Vorgang als weitere Rechnung oder merge wie teilungen
--------------------------------------------------------------------
  #  Oder/DasOderDas IF UND
 ##  VorangAuswahl/DasOderDas Else UND

 Nutzen = Kann Wahrheiten weitergeben mit mehrfach auswahl
--------------------------------------------------------------------
  |  Trennt Befehl von Argument oder Ausgabe oder Wörter , ersetzt "" ''
 ||| Mehrfach mitgabe , kein Merge , kann aber mit Merge erweitert werden , auch (Nr) gebunden möglich

 Nutzen =  Könnte Ein befehl weitergeben oder mehrere
           Kann Duale Codes plus Wörter Plus Frequenz in eine [] Mitgeben wenn nötig (Wörter plus Anders)
--------------------------------------------------------------------
 (Zahl)  Zahl Zuweisung Für Verarbeitung vorgang , ähnlich eines Muster_Dirs , nur im Transport selbst

 Nutzen = Optional , kann einzelne mehrfach Labels/Aktionen Aufteilen
          Nützlich wen Protein weitergegeben für MicroSplittungen wie GPU - Sound Datenbänker usw
--------------------------------------------------------------------
 {Band|Frequenz}{Amp|Zahl}{Watt|Zahl}{V|Spannung}{Temp|Zahl}
 {Pfad|Adresse}{Ip|Adresse}{Interface|wlan0}
 Nutzen = {Was|Angabe} kann mit NR explizit weitergegegeb werden Beispiel {(1)Band|Frequenz} Vs {Pfad|/etc/pacman.conf}
--------------------------------------------------------------------
 ~~ für Merge von mehreren Packets kann per () granuliert werden das genau
 >> für Fork oder Splitting Links Nach Rechts
 << für Fork oder Splitting Rechts Vor Links
 ;; Für Paralell Transport
--------------------------------------------------------------------
  *  Wenn/Kann
  °  WennNicht/Muss
  >  WennKleiner/Kann/Soll
  <  WennGrößer/Kann/Soll
  !  WennEindeutig/Sofort
  …  WennFehler/Kann/Sicherheit
  ^  TransaktionsFehler/Debugg
--------------------------------------------------------------------
  ¶  Ersetzt # als Kommentar funktion
--------------------------------------------------------------------
¢|
  »[func.name|main]«
  »[declare|var|sock|int]«
  »[call|iw_sockets_open|return:sock]«
  »[call|iw_get_basic_config|args:sock,"wlan0",&wc|return:rc]«
  »[cond.if|rc == 0]«
    »[print|"Interface: wlan0"]«
    »[print|wc.essid]«
  »[cond.else]«
    »[print_err|"WLAN Adapter nicht gefunden"]«
    »[return|1]«
  »[cond.fi]«
  »[call|iw_sockets_close|args:sock]«
  »[return|0]«
|¢






