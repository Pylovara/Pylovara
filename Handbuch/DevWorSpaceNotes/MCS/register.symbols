register_symbols = [
    {
        'symbol': '¢|',
        'version': '1.0',
        'format': '¢|',
        'ref_id': '¢|',
        'description': 'TransaktionseingangDatenlogik fängt an',
        'created': '2025-04-28',
        'author': 'Thomas Zimmermann'
    },
    {
        'symbol': '|¢',
        'version': '1.0',
        'format': '|¢',
        'ref_id': '|¢',
        'description': 'Transaktionsausgang Datenlogik hört auf',
        'created': '2025-04-28',
        'author': 'Thomas Zimmermann'
    },
    {
        'symbol': '»',
        'version': '1.0',
        'format': '»',
        'ref_id': '»',
        'description': 'Start einer Aktion/eines Zweiges/Proteins',
        'created': '2025-04-28',
        'author': 'Thomas Zimmermann'
    },
    {
        'symbol': '«',
        'version': '1.0',
        'format': '«',
        'ref_id': '«',
        'description': 'Ende einer Aktion/eines Zweiges/Proteins',
        'created': '2025-04-28',
        'author': 'Thomas Zimmermann'
    },
    {
        'symbol': '[',
        'version': '1.0',
        'format': '[',
        'ref_id': '[',
        'description': 'Start Proteinpacket',
        'created': '2025-04-28',
        'author': 'Thomas Zimmermann'
    },
    {
        'symbol': ']',
        'version': '1.0',
        'format': ']',
        'ref_id': ']',
        'description': 'Ende Proteinpacket',
        'created': '2025-04-28',
        'author': 'Thomas Zimmermann'
    },
    {
        'symbol': '§',
        'version': '1.0',
        'format': '§',
        'ref_id': '$',
        'description': 'Zielreferenz Innere Zielreferenz / Prozess-ID / Hardware-Slot / Gerätepfad (in RAM, Dev, CPU-Bereich)',
        'created': '2025-04-28',
        'author': 'Thomas Zimmermann'
    },
    {
        'symbol': '$',
        'version': '1.0',
        'format': '$',
        'ref_id': '$',
        'description': 'Dirigent Externe Übergabe/Output zu Dirigent-Einheit (lokale API, Kernelpfad, Netzwerk, usw.)',
        'created': '2025-04-28',
        'author': 'Thomas Zimmermann'
    },
    {
        'symbol': "''",
        'version': '1.0',
        'format': "''",
        'ref_id': "''",
        'description': 'Commando , Wird als Anweisung verstanden',
        'created': '2025-04-28',
        'author': 'Thomas Zimmermann'
    },
    {
        'symbol': '""',
        'version': '1.0',
        'format': '""',
        'ref_id': '""',
        'description': 'Commando , Wird als Anweisung verstanden',
        'created': '2025-04-28',
        'author': 'Thomas Zimmermann'
    },
    {
        'symbol': '¨¨',
        'version': '1.0',
        'format': '¨¨',
        'ref_id': '¨¨',
        'description': 'Blanker Nenner , Das ist , Richtig , abgleich',
        'created': '2025-04-28',
        'author': 'Thomas Zimmermann'
    },
    {
        'symbol': '=',
        'version': '1.0',
        'format': '=',
        'ref_id': '=',
        'description': 'Bringt ganze berechnete oder Zuweisungsdatensätze zum Empfänger',
        'created': '2025-04-28',
        'author': 'Thomas Zimmermann'
    },
    {
        'symbol': '+',
        'version': '1.0',
        'format': '+',
        'ref_id': '+',
        'description': 'Adiert, Plus',
        'created': '2025-04-28',
        'author': 'Thomas Zimmermann'
    },
    {
        'symbol': '-',
        'version': '1.0',
        'format': '-',
        'ref_id': '-',
        'description': 'Subtrahiert Minus',
        'created': '2025-04-28',
        'author': 'Thomas Zimmermann'
    },
    {
        'symbol': '·',
        'version': '1.0',
        'format': '·',
        'ref_id': '·',
        'description': 'Berechnet etwas Mal',
        'created': '2025-04-28',
        'author': 'Thomas Zimmermann'
    },
    {
        'symbol': ':',
        'version': '1.0',
        'format': ':',
        'ref_id': ':',
        'description': 'berechnet etwas geteilt',
        'created': '2025-04-28',
        'author': 'Thomas Zimmermann'
    }

    register_symbols = [
    # Vorhandene Symbole (unverändert gelassen) ...
    {
        'symbol': '*',
        'version': '1.0',
        'format': '*',
        'ref_id': '*',
        'description': 'Wenn/Kann – Bedingung für möglichen Ablauf',
        'created': '2025-04-28',
        'author': 'Thomas Zimmermann'
    },
    {
        'symbol': '°',
        'version': '1.0',
        'format': '°',
        'ref_id': '°',
        'description': 'WennNicht/Muss – Bedingung für zwingenden Ablauf bei Fehlschlag',
        'created': '2025-04-28',
        'author': 'Thomas Zimmermann'
    },
    {
        'symbol': '>',
        'version': '1.0',
        'format': '>',
        'ref_id': '>',
        'description': 'WennKleiner/Kann/Soll – Vergleichsoperator kleiner',
        'created': '2025-04-28',
        'author': 'Thomas Zimmermann'
    },
    {
        'symbol': '<',
        'version': '1.0',
        'format': '<',
        'ref_id': '<',
        'description': 'WennGrößer/Kann/Soll – Vergleichsoperator größer',
        'created': '2025-04-28',
        'author': 'Thomas Zimmermann'
    },
    {
        'symbol': '!',
        'version': '1.0',
        'format': '!',
        'ref_id': '!',
        'description': 'WennEindeutig/Sofort – Trigger bei absoluter Bedingung',
        'created': '2025-04-28',
        'author': 'Thomas Zimmermann'
    },
    {
        'symbol': '…',
        'version': '1.0',
        'format': '…',
        'ref_id': '…',
        'description': 'WennFehler/Kann/Sicherheit – wird aufgerufen bei Unsicherheit oder Fehlern',
        'created': '2025-04-28',
        'author': 'Thomas Zimmermann'
    },
    {
        'symbol': '^',
        'version': '1.0',
        'format': '^',
        'ref_id': '^',
        'description': 'TransaktionsFehler oder Fehlerweitergabe',
        'created': '2025-04-28',
        'author': 'Thomas Zimmermann'
    },
    {
        'symbol': '#',
        'version': '1.0',
        'format': '#',
        'ref_id': '#',
        'description': 'ODER / IF UND Kombinationsausdruck für Bedingungen',
        'created': '2025-04-28',
        'author': 'Thomas Zimmermann'
    },
    {
        'symbol': '##',
        'version': '1.0',
        'format': '##',
        'ref_id': '##',
        'description': 'ELSE UND / Vorang-Auswahl / Alternative IF-Verzweigung',
        'created': '2025-04-28',
        'author': 'Thomas Zimmermann'
    },
    {
        'symbol': '|',
        'version': '1.0',
        'format': '|',
        'ref_id': '|',
        'description': 'Trennt Befehl von Argument oder Ausgabe oder Wörter',
        'created': '2025-04-28',
        'author': 'Thomas Zimmermann'
    },
    {
        'symbol': '|||',
        'version': '1.0',
        'format': '|||',
        'ref_id': '|||',
        'description': 'Mehrfachweitergabe, kein Merge, für parallele oder separate Tokens',
        'created': '2025-04-28',
        'author': 'Thomas Zimmermann'
    },
    {
        'symbol': '~~',
        'version': '1.0',
        'format': '~~',
        'ref_id': '~~',
        'description': 'Merge von mehreren Packets – kombinierender Transport',
        'created': '2025-04-28',
        'author': 'Thomas Zimmermann'
    },
    {
        'symbol': '>>',
        'version': '1.0',
        'format': '>>',
        'ref_id': '>>',
        'description': 'Fork / Splitting: Links nach Rechts',
        'created': '2025-04-28',
        'author': 'Thomas Zimmermann'
    },
    {
        'symbol': '<<',
        'version': '1.0',
        'format': '<<',
        'ref_id': '<<',
        'description': 'Fork / Splitting: Rechts vor Links',
        'created': '2025-04-28',
        'author': 'Thomas Zimmermann'
    },
    {
        'symbol': ';;',
        'version': '1.0',
        'format': ';;',
        'ref_id': ';;',
        'description': 'Paralleler Transport – simultane Weitergabe',
        'created': '2025-04-28',
        'author': 'Thomas Zimmermann'
    }
    # Optional: Weiterer Block für strukturierte Objekttypen wie {Band|Frequenz}
    // Weitere Symbole bei Bedarf anhängen
]
