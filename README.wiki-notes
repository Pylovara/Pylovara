#####################################################################################
                    Ⓟylovara-System |Rootbasierter Aufbau
#####################################################################################
                                 Install
#####################################################################################
git clone https://github.com/Pylovara/Pylovara.git
cd Pylovara/Installer/
sudo ./full.install-core
#####################################################################################
                               Update Manual
#####################################################################################
cd Pylovara/Installer/
sudo ./pylovara.updater-needle
#####################################################################################
############################# Was ist Pylovara? #####################################

Pylovara ist ein modular aufgebautes, systemweites File- und Steuerungssystem, 
das vollständig auf der Shell-Ebene arbeitet – 
ohne GUI, ohne Umwege, ohne Bullshit. Es wird ausschließlich auf Root-Ebene 
installiert (`/Pylovara/`) und meidet bewusst alle
$HOME-Abhängigkeiten.

Pylovara ist ein radikal neues, modular aufgebautes Datei- und Steuerungssystem,
das vollständig in der Shell lebt – ohne GUI, ohne Umwege, ohne Bullshit.
Es ist nicht einfach nur ein Tool oder eine Skriptsammlung, sondern die Grundlage
eines neuen Denkens im Umgang mit Betriebssystemen.

 Kernprinzipien

 Systemweit & Rootbasiert
- Installation erfolgt ausschließlich auf Root-Ebene (`/Pylovara/`)
- Keine Abhängigkeit von `$HOME`-Verzeichnissen
- Funktioniert sogar in minimalen Umgebungen wie BusyBox oder Rettungssystemen

 Shell-first Design
- Komplett steuerbar über Terminal
- Direkte Integration in Bash, Zsh, Fish und PowerShell (via WSL)
- Ermöglicht tiefste Systemintegration ohne externe Frameworks

 Modular & Erweiterbar
- Struktur basiert auf *Core - Magic - Nodes - Nano - Micro - Needles - Logic*
- Neue Module können ohne Kernänderung hinzugefügt werden
- Unterstützt dynamische Datentypen, Hardware-Integration und AI-Komponenten

#####################################################################################

 Wer Brauch schon PDFs

    helpme 01      # Übersicht aller Module
    helpmex 04-02  # Wie du die KI austauschbar machst
    kernel 01      # Architecturen übersicht
    kernelx 01-01  # Erste Seite
    dna lex        # Übersicht aller Module
    dna lexi       # Zeile Ausschnitte
    p Handbuch     # Zeigt die gesamte Baumstruktur
    callme firefox # bin finder
    pylo Handbuch/- ai.wiki-notes cat

                > "Was du nicht selbst in der Shell erschaffst,
                   wird dir irgendwann vom GUI genommen."       – alter Admin-Spruch

                         Hier Endet die Shell Information

#####################################################################################

 Architektur
        Pylovara organisiert sich in einem klaren Familienmodell:

| Typ | Rolle |
|-----|-------|
| `*.core` | Großvater – Ausführender Teil |
| `*.*-magic` | Großmutter – Umschalter, Konfigurationsbrücke |
| `*.*-node` | Vater – Hauptcontroller |
| `*.*-nano` | Mutter – Substrukturmanager |
| `*.*-micro` | Tochter – Mikrosteuerung (z.B. HTML, JS, SQL) |
| `*.*-cache` | Cache – Zwischenspeicher für Temp-Daten |
| `*.*-needle` | Hardwarebindung – Kernelnahe Steuerung (.sys, .ko, .dll) |
| `<*von>.<*zu>-logic` | Verbindungslogik – Transport zwischen Schichten |

#####################################################################################

 Kernel & Handbuch

- `kernel lex`: Lexikon des Systems
- `kernelx [nr]`: Detailierte Ansicht spezifischer Kernelabschnitte
- `helpme`: Wiki-System zur Erläuterung aller Komponenten

#####################################################################################

 Steuerung durch Symbole
          Pylovara verwendet ein symbolisches Transaktions- und Steuerungssystem:

¢|...|¢        : Transaktion Anfang / Ende
»...«          : Aktion / Zweig / Protein
[...]          : Proteinpacket
§Ziel          : Zielreferenz
$Dirigent      : Externe Übergabe
""             : Print-Ausgabe
''             : Befehl
¨¨             : Blanker Nenner
#              : IF / ODER Logik
#=             : Parallelverarbeitung
|              : Trennung von Befehlen
;;             : Paralleltransport
~~             : Merge
>> <<          : Fork/Splitting
*(°<><>!)      : Bedingte Automation
¶              : Kommentar

#####################################################################################

 Zukunftsvision
           kontinuierlich weiterentwickeln–vom Werkzeug zum kompletten System:

- Tiling Window Management direkt aus der Shell
- Ersatz für Registry, Konfigurationsdateien, GUI-Tools
- GPU/CPU Sound/Audio Mikrosteuerung**
- Portabler Skin-Wechsel der Oberfläche**
- Nahtlose Integration in bestehende OS-Strukturen
- AI-gestützte Codegenerierung & Debugging

Stellen Sie sich ein Windows vor, das intern noch Windows bleibt, aber komplett neu
gesteuert wird. Oder ein ArchLinux, das seine Kontrolle an Pylovara abgibt.
Die Einsatzgebiete sind unbegrenzt.

#####################################################################################

 Shell Layouts
           Pylovara unterstützt verschiedene Prompt-Stile:

- **Standard**: `/Pylovara/System/Shell/Layout/pylovara.shell-layout`
- **Hilfe**: `/Pylovara/System/Shell/Layout/pylovara+.shell-layout`
- **Minimal**: `/Pylovara/System/Shell/Layout/pylovara++.shell-layout`

#####################################################################################

 Philosophie
         "Was du nicht selbst in der Shell erschaffst,
            wird dir irgendwann vom GUI genommen."

Pylovara ist mehr als ein Tool – es ist eine Haltung. Eine Haltung gegenüber
dem System,der Kontrolle, der Freiheit. Es gibt keine Abstraktionsebenen,
mit oder ohne GUI-Maskottchen. Nur dich, deine Befehle und dein System.

#####################################################################################
################################## Readme Ende ######################################
#####################################################################################
