#####################################################################################
            ‚ìÖylovara-System|Version 0.5.2|Rootbasierter Aufbau
#####################################################################################
                                    Install
#####################################################################################
git clone https://github.com/Pylovara/Pylovara.git
cd Pylovara/Installer/
sudo ./full.install-core
#####################################################################################
                                  Update Manual
#####################################################################################
/Pylovara/./pylovara.updater-needle
#####################################################################################
###                                Neu                                            ###
###                                                                               ###
###                Komplett Umbau - Entfernen von Ollama                          ###
###                                                                               ###
###          daf√ºr =   ggml - mamba.cpp - whisper.cpp  unter Module               ###
###                       - MCS Grund Logik -                                     ###
############################# Was ist Pylovara? #####################################

Pylovara ist ein modular aufgebautes, systemweites File- und Steuerungssystem, 
das vollst√§ndig auf der Shell-Ebene arbeitet ‚Äì 
ohne GUI, ohne Umwege, ohne Bullshit. Es wird ausschlie√ülich auf Root-Ebene 
installiert (`/Pylovara/`) und meidet bewusst alle
$HOME-Abh√§ngigkeiten.

Alle Module, Notes, Fehlerlogs, Konfigurationen und Helferlein leben 
unterhalb einer einheitlichen Stammstruktur:

        -- *.*-dna  *.dna-cmd  *.dna-notes  *.wiki-notes --

*.*-dna  = Shell Hauptschlagader f√ºr Funktionen
.dna-cmd = Shell Befehle die F√ºr .vara Pakete dienen
.vara    = Kann alles nehmen und es eigenst√§ndig verwenden
-varalibs= Erweiterbarkeit .....

Controll Werzeuge sind :
-conf daten die als Granulare Setting und Sourcing stelle dienen

*.wiki-notes
Benutzer Handbuch √ºber Elementare Funktionen

*.dna-notes
Benuter Handbuch f√ºr den dna Manager

Herzst√ºck :
.pv-conf hier Spielen alle -conf Zusammen und werden direkt im Bash Kern Gesourced

#####################################################################################

### Besonderheiten

     **Systemnah**:     Root-only, keine Userverzeichnisse.
     **Kompatibel**:    Arch, Debian, Alpine, sogar WSL oder Rescue-Shells.
     **Erweiterbar**:   Jeder Typ kann erg√§nzt werden.
     **Konfigurierbar** Mit `*.*-magic``*.*-logic`-Dateien kann alles verkn√ºpft werden.
     **Sicherbar**:     Volle Kontrolle durch zentralisierte Steuerung.


### Wer Brauch schon PDFs

    helpme 01      # √úbersicht aller Module
    helpmex 04-02  # Wie du die KI austauschbar machst
    dna lex        # √úbersicht aller Module
    dna lexi       # Zeile Ausschnitte
    p Handbuch     # Zeigt die gesamte Baumstruktur
    callme firefox # bin finder
    pylo Handbuch/- ai.wiki-notes cat

                > "Was du nicht selbst in der Shell erschaffst,
                   wird dir irgendwann vom GUI genommen."       ‚Äì alter Admin-Spruch



                         Hier Endet die Shell Information

#####################################################################################
################################## Zuckunftsmusik  ##################################
################################## Pylovara System ##################################

Pylovara arbeitet nach dem :
" Familien Prinzip " :
------------------------------------------------------------------
*.Core
Gro√üVater , Ausf√ºhrende Kraft (konzept bin - exec - dmg)

<CoreName>.<NodeName>-magic
Gro√üMutter , kann mehrere Nodes str√§nge je nach OS einsatz schalten.

*.<NanoName>-Nodes
Vater Teil , steuert alles was in verbindung mit der Node steht und steuert Master

*.<MicroName>-Nano
Mutter Teil , steuert alles was unterhalb der Nano steht

*.<NeedleName>-Micro
Tochter Teil , Steuert alles was ab hier Granularer sein soll

*.<CacheName>-cache
Schneller abrufbarer offner und lese wie schreibbarer zwischenspeicher

*.<HardwareName>-Neelde
Hanwerker , Dient als Treiber und Hardware schnittstelle

------------------------------------------------------------------
<von-wo>.<zu-wem>-Logic
Wird nur mit der logik gef√ºttert was transport werden soll und zwischengeschaltet ...
------------------------------------------------------------------
###Einordnungs M√∂glichkeiten √ºber neue grundstruktur :


üì¶ Einordnung g√§ngiger Dateitypen in die Pylovara-Familienstruktur
Pylovara-Typ	Rolle (Familie)	Dateitypen / Formate (Beispiel)	Plattform


*.Core	     Gro√üvater / Ausf√ºhrend
.exe, .bin, .app, .sh, .apk, .service, Mach-O, ELF	Win, Mac, Linux, Android

*.*-magic	Gro√ümutter / Umschalter
.bat, .command, .plist, .desktop, .yaml, .nix, .launch	Win, Mac, Linux

*.*-Nodes	Vater / Hauptcontroller
.json, .ini, .plist, .conf, .cfg, .yaml, .xml	Alle

*.*-Nano	Mutter / Substruktur
.json, .yaml, .db, .sqlite, .meta, .xml	Alle

*.*-Micro	Tochter / Mikrosteuerung
.html, .js, .css, .lua, .py, .cmd, .sql, .tpl	Alle

*.*-cache	Cache / Zwischenspeicher
.cache, .tmp, .log, .bak, .lock, .swap, .db-wal, .pickle	Alle

*.*-Neelde	Hardwarebindung
.sys, .kext, .ko, .efi, .dll, .so, .dylib, .drv	Win, Linux, Mac

<*von>.<*zu>-Logic	Verbindung / Transport
.logic, .flow, .route, .map, .graph, .yaml, .dsl, .hook	Alle


                     Das Ist Alles was die Welt Brauch

         -- Core - Magic - Nodes - Nano - Micro - Needles - Logic --

                    Radikaler Umbau Aller GrundStrukturen
                        F√ºr Sinn - Freiheit & Verstand

### Ausblick

Pylovara ist zu beginn vielleicht nur ein Tool ‚Äì wird aber zum System.
Erst ein Werkzeugkasten f√ºr Leute, die das Terminal verstehen und keine Lust auf
50 Klicks im GUI-Men√º haben und Sp√§ter ein Komplett eigenes √ñkosystem das M√ºhelos
datentypen Mergen kann , ohne dabei den √úberblick zu verlieren ...

Wer sich damit befasst und auskennt, kann sein Betriebssystem nicht nur steuern,
sondern **neu formen**.

Pylovara-System wird in der lage sein sich in ein Betriebsystem rein zu integrieren 
und ihnen als Nutzer in sp√§teren versionen zu erlauben,
die oberfl√§che wie ein Skin zu wechseln .... Durch das Permanente von unten rein 
bauen wird Pylovara-System die Installationswurzel des 
Betriebsystems st√ºck f√ºr st√ºck √ºbernehmen und ihnen den vollzugriff auf ein eigenes 
Pylovara-System Umgebung geben .... 

- Prim√§re ziele , Tilling , Workspaces , Zentral Terminal , Vollzugriff , Konfigurierbarkeit ... usw
Stellen sie sich ein Windows vor das im kern noch Windows ist aber komplett anderes gesteuert wird oder
ein ArchLinux das die Kontrolle an Pylovara abgibt...

Ihnen geht die Registry auf den Keks ? ersetzen durch nodes nano combos und needles ....
Der Sound ist ihnen zu ungenau steuerbar ? esretzen durch nodes nano micro and needles combos ...
Die oberfl√§che passt nicht ? Ersetzen !
Die GPu k√∂nnt mehr ? Finetuning 
Sie wollen CPu Takten ? Easy 
Mouse brauch mehr optionen oder andere logiken ? Machen ...
Die einsatzgebiete sind unbegrenzt ....


- **Portabilit√§t**: Funktioniert auf jedem Betriebssystem mit Bash-Unterst√ºtzung, 
    inklusive minimaler Umgebungen wie BusyBox.
- **Erweiterbarkeit**: Neue Module und Dateitypen k√∂nnen ohne √Ñnderung der Kernstruktur 
    hinzugef√ºgt werden.
- **Systemn√§he**: Direkte Shell-Integration ohne Abh√§ngigkeiten von Hochsprachen oder 
    komplexen Frameworks.
- **Flexibilit√§t**: Anpassbar an verschiedene Desktop-Umgebungen
    (z. B. Kitty, Alacritty, GNOME, PowerShell) und Compositors.

Pylovara(-System) soll ein unverzichtbares Allzweckwerkzeug f√ºr Systemadministratoren,
Entwickler und Enthusiasten werden. Es bietet eine intuitive, shellbasierte Schnittstelle, 
die Betriebssysteme wie eine Kletterpflanze durchdringt ‚Äì flexibel, robust und zukunftssicher.
Durch die enge Integration mit Git und die Unterst√ºtzung f√ºr neue Dateitypen wird Pylovara 
kontinuierlich wachsen und sich an die Bed√ºrfnisse seiner Nutzer anpassen.

Die Wurzel-Metapher

Stellen Sie sich Pylovara als eine Kletterpflanze vor, deren Wurzeln tief in die Shell-Umgebung 
eines Betriebssystems greifen. Die Fr√ºchte sind die Module, Nodes und Notes, die durch die zentrale 
Steuerung ‚Äì den Pylovara Directory Manager ‚Äì wachsen und sich verzweigen. Diese Struktur erm√∂glicht:

Systemweite Interaktion. Pylovara agiert direkt √ºber die Shell, ohne unn√∂tige
Abstraktionsschichten, und ist sogar in Rettungssystemen oder minimalen Umgebungen einsatzbereit.
(Info *.vara | *.varalibs)

Modularit√§t. Neue Module wie audio-nodes oder gpu-nodes k√∂nnen nahtlos hinzugef√ºgt werden,
um spezifische Hardware- oder Softwarekomponenten zu steuern.

Portabilit√§t. Kompatibel mit jeder Bash-unterst√ºtzenden Umgebung ‚Äì von Linux √ºber BSD bis hin
zu WSL oder macOS.

Und jetzt mal unter uns Sysadminen ‚Äì wenn Sie sich schon immer gefragt haben:
Wollen Sie vielleicht ein Arch Linux mit sattem DLL-Support, gebaut auf einem macOS? Kein Thema, 
genau davon sprechen wir mein Freund ..
